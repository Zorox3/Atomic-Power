package de.atomicpower.blocks;

import net.minecraft.block.Block;
import net.minecraft.block.material.Material;
import net.minecraft.tileentity.TileEntity;
import net.minecraft.world.World;
import de.atomicpower.Main.AtomicPower;
import de.atomicpower.abstracts.AtomBlock;
import de.atomicpower.abstracts.AtomBlockContainer;

public class AtomicGeneratorFloor extends AtomBlock {

	private int structureSize = 3;

	public AtomicGeneratorFloor(String name, Material material) {
		super(name, material);

		this.setBlockBounds(0, 0, 0, 1, 0.2f, 1);
	}

	public boolean renderAsNormalBlock() {
		return false;
	}

	public boolean isOpaqueCube() {
		return false;
	}

	public void onNeighborBlockChange(World world, int x, int y, int z,
			Block neighbor) {
		updateMultiBlockStructure(world, x, y, z);
	}

	public void onBlockAdded(World world, int x, int y, int z) {
		updateMultiBlockStructure(world, x, y, z);

	}

	public void updateMultiBlockStructure(World world, int x, int y, int z) {
		isMultiBlockStructure(world, x, y, z);
	}

	public boolean isMultiBlockStructure(World world, int x, int y, int z) {
		boolean mStructure = false;
		boolean currentCheckStructure = true;

		for (int x2 = 0; x2 < structureSize; x2++) {
			for (int x3 = 0; x3 < structureSize; x3++) {
				for (int z3 = 0; z3 < structureSize; z3++) {
					if (currentCheckStructure
							&& !world
									.getBlock(x - x3 - x2, y, z3 - z)
									.equals(AtomicPower.blockRegistry
											.getItemByName("atomicGeneratorFloor"))) {
						System.out.println("not mbs");
						currentCheckStructure = false;

					}
				}
			}
		}

		return false;
	}

	public void setTexture() {
		setBlockTextureName("stone");
	}

}
